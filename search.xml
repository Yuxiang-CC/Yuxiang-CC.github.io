<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL之PXC集群</title>
      <link href="2020/10/14/MySQL%E4%B9%8BPXC%E9%9B%86%E7%BE%A4/"/>
      <url>2020/10/14/MySQL%E4%B9%8BPXC%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>Docker环境下，部署MySQL之PXC集群的操作</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Aliyun CentOS Linux 7</li><li>Docker Version 19.03.12</li><li>Docker Image percona/percona-xtradb-cluster:5.7</li></ul><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h4 id="1-下载MySQL镜像"><a href="#1-下载MySQL镜像" class="headerlink" title="1.下载MySQL镜像"></a>1.下载MySQL镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull percona/percona-xtradb-cluster:5.7</span><br></pre></td></tr></table></figure><h4 id="2-重命名镜像"><a href="#2-重命名镜像" class="headerlink" title="2.重命名镜像"></a>2.重命名镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag percona/percona-xtradb-cluster:5.7 pxc:5.7</span><br></pre></td></tr></table></figure><h4 id="3-创建数据卷"><a href="#3-创建数据卷" class="headerlink" title="3.创建数据卷"></a>3.创建数据卷</h4><p><strong>注</strong>： <strong><em>pxc</em></strong> 只支持数据卷，不支持挂载目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker volume create v1</span><br><span class="line">docker volume create v1</span><br><span class="line">docker volume create v1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看数据卷创建情况</span></span><br><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><h4 id="4-创建网络，用于-pxc集群"><a href="#4-创建网络，用于-pxc集群" class="headerlink" title="4.创建网络，用于 pxc集群"></a>4.创建网络，用于 <strong>pxc</strong>集群</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker network create pxc-network</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看Docker 网络</span></span><br><span class="line">docker network ls</span><br></pre></td></tr></table></figure><h4 id="5-运行第一个MySQL实例节点"><a href="#5-运行第一个MySQL实例节点" class="headerlink" title="5.运行第一个MySQL实例节点"></a>5.运行第一个MySQL实例节点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=pn1 \</span><br><span class="line">--net=pxc-network -p 9000:3306 \</span><br><span class="line">-v v1:/var/lib/mysql --privileged \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_NAME=cluster1 \</span><br><span class="line">-e XTRABACKUP_PASSWORD=123456 pxc:5.7</span><br></pre></td></tr></table></figure><p>查看是否创建成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs pn1</span><br></pre></td></tr></table></figure><p>出现下面情况测启动成功 </p><p><code>2020-10-15T01:39:47.933208Z 0 [Note] InnoDB: Buffer pool(s) load completed at 201015  1:39:47</code></p><h4 id="6-运行第二个MySQL实例节点"><a href="#6-运行第二个MySQL实例节点" class="headerlink" title="6.运行第二个MySQL实例节点"></a>6.运行第二个MySQL实例节点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=pn2 \</span><br><span class="line">--net=pxc-network -p 9001:3306 \</span><br><span class="line">-v v2:/var/lib/mysql --privileged \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_NAME=cluster1 \</span><br><span class="line">-e XTRABACKUP_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_JOIN=pn1 pxc:5.7</span><br></pre></td></tr></table></figure><p>从<strong>第二个节点开始</strong>，就需要增加<code>cluster_join</code> 来指定与其进行数据同步的节点。当 <code>PXC</code>集群中存在两个节点以上之后就没有主节点的概念了。集群中最后一个退出的节点就会变为主节点，在<code>/var/lib/mysql/grastate.dat</code> 文件中属性 <code>safe_to_bootstrap</code> 的值 会从 <code>0</code> 被设置为 <code>1</code> 表示该节点是主节点。</p><h4 id="7-运行第三个MySQL实例节点"><a href="#7-运行第三个MySQL实例节点" class="headerlink" title="7.运行第三个MySQL实例节点"></a>7.运行第三个MySQL实例节点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=pn3 \</span><br><span class="line">--net=pxc-network -p 9002:3306 \</span><br><span class="line">-v v3:/var/lib/mysql --privileged \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_NAME=cluster1 \</span><br><span class="line">-e XTRABACKUP_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_JOIN=pn2 pxc:5.7</span><br></pre></td></tr></table></figure><p>这次我们指定<code>cluster_join=pn2</code>,可以证明<strong>当集群中有两个以上的节点时，就没有主节点的概念了</strong>。</p><h4 id="8-进入-pn1节点"><a href="#8-进入-pn1节点" class="headerlink" title="8.进入 pn1节点"></a>8.进入 <code>pn1</code>节点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it pn1 /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接mysql</span></span><br><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><h4 id="9-查看状态"><a href="#9-查看状态" class="headerlink" title="9.查看状态"></a>9.查看状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show status like &quot;wsrep%&quot;;</span><br><span class="line">+----------------------------------+-------------------------------------------------------+</span><br><span class="line">| Variable_name                    | Value                                                 |</span><br><span class="line">+----------------------------------+-------------------------------------------------------+</span><br><span class="line">| wsrep_local_state_uuid           | 81380d49-0dd6-11eb-aa93-028f13d687c0                  |</span><br><span class="line">| wsrep_protocol_version           | 9                                                     |</span><br><span class="line">| wsrep_last_applied               | 25                                                    |</span><br><span class="line">| wsrep_last_committed             | 25                                                    |</span><br><span class="line">| wsrep_replicated                 | 0                                                     |</span><br><span class="line">| wsrep_replicated_bytes           | 0                                                     |</span><br><span class="line">| wsrep_repl_keys                  | 0                                                     |</span><br><span class="line">| wsrep_repl_keys_bytes            | 0                                                     |</span><br><span class="line">| wsrep_repl_data_bytes            | 0                                                     |</span><br><span class="line">| wsrep_repl_other_bytes           | 0                                                     |</span><br><span class="line">| wsrep_received                   | 4                                                     |</span><br><span class="line">| wsrep_received_bytes             | 656                                                   |</span><br><span class="line">| wsrep_local_commits              | 0                                                     |</span><br><span class="line">| wsrep_local_cert_failures        | 0                                                     |</span><br><span class="line">| wsrep_local_replays              | 0                                                     |</span><br><span class="line">| wsrep_local_send_queue           | 0                                                     |</span><br><span class="line">| wsrep_local_send_queue_max       | 1                                                     |</span><br><span class="line">| wsrep_local_send_queue_min       | 0                                                     |</span><br><span class="line">| wsrep_local_send_queue_avg       | 0.000000                                              |</span><br><span class="line">| wsrep_local_recv_queue           | 0                                                     |</span><br><span class="line">| wsrep_local_recv_queue_max       | 2                                                     |</span><br><span class="line">| wsrep_local_recv_queue_min       | 0                                                     |</span><br><span class="line">| wsrep_local_recv_queue_avg       | 0.250000                                              |</span><br><span class="line">| wsrep_local_cached_downto        | 0                                                     |</span><br><span class="line">| wsrep_flow_control_paused_ns     | 0                                                     |</span><br><span class="line">| wsrep_flow_control_paused        | 0.000000                                              |</span><br><span class="line">| wsrep_flow_control_sent          | 0                                                     |</span><br><span class="line">| wsrep_flow_control_recv          | 0                                                     |</span><br><span class="line">| wsrep_flow_control_interval      | [ 173, 173 ]                                          |</span><br><span class="line">| wsrep_flow_control_interval_low  | 173                                                   |</span><br><span class="line">| wsrep_flow_control_interval_high | 173                                                   |</span><br><span class="line">| wsrep_flow_control_status        | OFF                                                   |</span><br><span class="line">| wsrep_cert_deps_distance         | 0.000000                                              |</span><br><span class="line">| wsrep_apply_oooe                 | 0.000000                                              |</span><br><span class="line">| wsrep_apply_oool                 | 0.000000                                              |</span><br><span class="line">| wsrep_apply_window               | 0.000000                                              |</span><br><span class="line">| wsrep_commit_oooe                | 0.000000                                              |</span><br><span class="line">| wsrep_commit_oool                | 0.000000                                              |</span><br><span class="line">| wsrep_commit_window              | 0.000000                                              |</span><br><span class="line">| wsrep_local_state                | 4                                                     |</span><br><span class="line">| wsrep_local_state_comment        | Synced                                                |</span><br><span class="line">| wsrep_cert_index_size            | 0                                                     |</span><br><span class="line">| wsrep_cert_bucket_count          | 22                                                    |</span><br><span class="line">| wsrep_gcache_pool_size           | 1320                                                  |</span><br><span class="line">| wsrep_causal_reads               | 0                                                     |</span><br><span class="line">| wsrep_cert_interval              | 0.000000                                              |</span><br><span class="line">| wsrep_open_transactions          | 0                                                     |</span><br><span class="line">| wsrep_open_connections           | 0                                                     |</span><br><span class="line">| wsrep_ist_receive_status         |                                                       |</span><br><span class="line">| wsrep_ist_receive_seqno_start    | 0                                                     |</span><br><span class="line">| wsrep_ist_receive_seqno_current  | 0                                                     |</span><br><span class="line">| wsrep_ist_receive_seqno_end      | 0                                                     |</span><br><span class="line">| wsrep_incoming_addresses         | a3faa8d63239:3306,254c483efa2d:3306,4745baee323f:3306 |</span><br><span class="line">| wsrep_cluster_weight             | 3                                                     |</span><br><span class="line">| wsrep_desync_count               | 0                                                     |</span><br><span class="line">| wsrep_evs_delayed                |                                                       |</span><br><span class="line">| wsrep_evs_evict_list             |                                                       |</span><br><span class="line">| wsrep_evs_repl_latency           | 0&#x2F;0&#x2F;0&#x2F;0&#x2F;0                                             |</span><br><span class="line">| wsrep_evs_state                  | OPERATIONAL                                           |</span><br><span class="line">| wsrep_gcomm_uuid                 | 8b7301c0-0dd6-11eb-b180-07c4552aa3e6                  |</span><br><span class="line">| wsrep_cluster_conf_id            | 3                                                     |</span><br><span class="line">| wsrep_cluster_size               | 3                                                     |</span><br><span class="line">| wsrep_cluster_state_uuid         | 81380d49-0dd6-11eb-aa93-028f13d687c0                  |</span><br><span class="line">| wsrep_cluster_status             | Primary                                               |</span><br><span class="line">| wsrep_connected                  | ON                                                    |</span><br><span class="line">| wsrep_local_bf_aborts            | 0                                                     |</span><br><span class="line">| wsrep_local_index                | 1                                                     |</span><br><span class="line">| wsrep_provider_name              | Galera                                                |</span><br><span class="line">| wsrep_provider_vendor            | Codership Oy &lt;info@codership.com&gt;                     |</span><br><span class="line">| wsrep_provider_version           | 3.45(ra60e019)                                        |</span><br><span class="line">| wsrep_ready                      | ON                                                    |</span><br><span class="line">+----------------------------------+-------------------------------------------------------+</span><br><span class="line">71 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure><p><code>wsrep_incoming_addresses</code> 属性 对应的就是三台机器的实例ID。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| wsrep_incoming_addresses   |   a3faa8d63239:3306,254c483efa2d:3306,4745baee323f:3306 |</span><br></pre></td></tr></table></figure><p>集群完整性检查：</p><table><thead><tr><th align="left">属性</th><th>含义</th></tr></thead><tbody><tr><td align="left">wsrep_cluster_state_uuid</td><td>在集群所有节点的值应该是相同的,有不同值的节点,说明其没有连接入集群.</td></tr><tr><td align="left">wsrep_cluster_conf_id</td><td>正常情况下所有节点上该值是一样的.如果值不同,说明该节点被临时”分区”了.当节点之间网络连接恢复 的时候应该会恢复一样的值.</td></tr><tr><td align="left">wsrep_cluster_size</td><td>如果这个值跟预期的节点数一致,则所有的集群节点已经连接.</td></tr><tr><td align="left">wsrep_cluster_status</td><td>集群组成的状态.如果不为”Primary”,说明出现”分区”或是”split-brain”脑裂状况.</td></tr></tbody></table><p>节点状态检查：</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>wsrep_ready</td><td>该值为 ON,则说明可以接受 SQL 负载.如果为 Off,则需要检查 wsrep_connected</td></tr><tr><td>wsrep_connected</td><td>如果该值为 Off,且 wsrep_ready 的值也为 Off,则说明该节点没有连接到集群.(可能是 wsrep_cluster_address 或 wsrep_cluster_name 等配置错造成的.具体错误需要查看错误日志)</td></tr><tr><td>wsrep_local_state_comment</td><td>如果 wsrep_connected 为 On,但 wsrep_ready 为 OFF,则可以从该项查看原因</td></tr></tbody></table><p>复制健康检查:</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>wsrep_flow_control_paused</td><td>表示复制停止了多长时间.即表明集群因为 Slave 延迟而慢的程度.值为 0~1,越靠近 0 越好,值为 1 表示 复制完全停止.可优化 wsrep_slave_threads 的值来改善</td></tr><tr><td>wsrep_cert_deps_distance</td><td>有多少事务可以并行应用处理.wsrep_slave_threads 设置的值不应该高出该值太多</td></tr><tr><td>wsrep_flow_control_sent</td><td>表示该节点已经停止复制了多少次</td></tr><tr><td>*wsrep_local_recv_queue_avg</td><td>表示 slave 事务队列的平均长度.slave 瓶颈的预兆. 最慢的节点的 wsrep_flow_control_sent 和 wsrep_local_recv_queue_avg 这两个值最高.这两个值较低的话,相对更好</td></tr></tbody></table><p>检测慢网络问题：</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>wsrep_local_send_queue_avg</td><td>网络瓶颈的预兆.如果这个值比较高的话,可能存在网络瓶颈</td></tr></tbody></table><p>冲突或死锁的数目:</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>wsrep_last_committed</td><td>最后提交的事务数目</td></tr><tr><td>wsrep_local_cert_failures 和 wsrep_local_bf_aborts</td><td>回滚,检测到的冲突数目</td></tr></tbody></table><h2 id="集群同步验证"><a href="#集群同步验证" class="headerlink" title="集群同步验证"></a>集群同步验证</h2><p>验证集群搭建。</p><ol><li>在节点 <code>pn1</code>创建数据库<code>pxc_test</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database pxc_test;                         </span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br></pre></td></tr></table></figure><ol start="2"><li>在节点<code>pn2</code>中查看数据库<code>psc_test</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| pxc_test           |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure><ol start="3"><li>在节点<code>pn2</code>上创建<code>sys_user</code>表</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use pxc_test;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table sys_user ( id int primary key, name varchar(255));</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br></pre></td></tr></table></figure><ol start="4"><li>在节点<code>pn3</code>上查看表</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">+--------------------+</span><br><span class="line">| Tables_in_pxc_test |</span><br><span class="line">+--------------------+</span><br><span class="line">| sys_user           |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="5"><li>在<code>sys_user</code>上创建数据</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into sys_user values(1,&quot;yuxiang&quot;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from sys_user;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | yuxiang |</span><br><span class="line">+----+---------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><ol start="6"><li>在<code>pn1</code>和<code>pn2</code>上查看数据</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from sys_user;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | yuxiang |</span><br><span class="line">+----+---------+</span><br><span class="line">1 row in set (0.02 sec)</span><br></pre></td></tr></table></figure><p><strong>可以看到三个节点数据正常同步，并且都可读可写。</strong></p><h2 id="新增集群节点操作"><a href="#新增集群节点操作" class="headerlink" title="新增集群节点操作"></a>新增集群节点操作</h2><p>当数据库不够用时，我们通常需要增加数据库节点来分担压力，我们来演示一下新增节点的操作。</p><ol><li>创建数据卷</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create v4</span><br></pre></td></tr></table></figure><ol start="2"><li>运行第四个MySQL实例容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=pn4 \</span><br><span class="line">--net=pxc-network -p 9003:3306 \</span><br><span class="line">-v v4:/var/lib/mysql --privileged \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_NAME=cluster1 \</span><br><span class="line">-e XTRABACKUP_PASSWORD=123456 \</span><br><span class="line">-e CLUSTER_JOIN=pn3 pxc:5.7</span><br></pre></td></tr></table></figure><p>这次<code>cluster_join</code>指定的容器是<code>pn3</code>。</p><ol start="3"><li>进入<code>pn4</code>节点，查看数据</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| pxc_test           |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">+--------------------+</span><br><span class="line">| Tables_in_pxc_test |</span><br><span class="line">+--------------------+</span><br><span class="line">| sys_user           |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from sys_user;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | yuxiang |</span><br><span class="line">+----+---------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><ol start="4"><li>在<code>pn4</code>上添加数据</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into sys_user values(2,&quot;pxc_pn4&quot;);</span><br><span class="line">Query OK, 1 row affected (0.31 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from sys_user;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | yuxiang |</span><br><span class="line">|  2 | pxc_pn4 |</span><br><span class="line">+----+---------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>在其他节点查看，数据也都同步了。</strong></p><h2 id="模拟宕机操作"><a href="#模拟宕机操作" class="headerlink" title="模拟宕机操作"></a>模拟宕机操作</h2><ol><li>将<code>pn4</code>关闭</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop pn4</span><br></pre></td></tr></table></figure><ol start="2"><li>在<code>pn1</code>中插入数据</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into sys_user values(3, &quot;down_online&quot;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from sys_user;</span><br><span class="line">+----+-------------+</span><br><span class="line">| id | name        |</span><br><span class="line">+----+-------------+</span><br><span class="line">|  1 | yuxiang     |</span><br><span class="line">|  2 | pxc_pn4     |</span><br><span class="line">|  3 | down_online |</span><br><span class="line">+----+-------------+</span><br><span class="line">3 rows in set (0.21 sec)</span><br></pre></td></tr></table></figure><ol start="3"><li>重新启动<code>pn4</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start pn4</span><br></pre></td></tr></table></figure><ol start="4"><li>查看数据</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from sys_user;</span><br><span class="line">+----+-------------+</span><br><span class="line">| id | name        |</span><br><span class="line">+----+-------------+</span><br><span class="line">|  1 | yuxiang     |</span><br><span class="line">|  2 | pxc_pn4     |</span><br><span class="line">|  3 | down_online |</span><br><span class="line">+----+-------------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>数据依然同步上了</p><hr><p><strong>ps</strong>：当所有节点全部宕机时，需从<code>pn1</code>节点启动，如果<code>pn1</code>不是最后一个宕机的，他的<code>volume</code>下的<code>grastate.dat</code>中的<code>safe_to_bootstrap: 0</code>,则无法启动，需要手动将该属性值改为<code>safe_to_bootstrap: 1</code></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
          <category> PXC集群 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper分布式锁</title>
      <link href="2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
      <url>2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
      
        <content type="html"><![CDATA[<p>Zookeeper实现分布式锁实战</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://zookeeper.apache.org" target="_blank" rel="noopener">Zookeeper</a>是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><h4 id="进入Zookeeper官网"><a href="#进入Zookeeper官网" class="headerlink" title="进入Zookeeper官网"></a>进入Zookeeper官网</h4><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/01.png" alt="zookeeper官网"></p><h4 id="下载最新版，并解压缩"><a href="#下载最新版，并解压缩" class="headerlink" title="下载最新版，并解压缩"></a>下载最新版，并解压缩</h4><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/02.png" alt="下载3.6.2版本"></p><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/03.png" alt="解压缩后目录"></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><div class="note idea"><ol><li>在安装目录下 <strong>conf目录</strong> 中将<strong>zoo_sample.cfg</strong> 复制一份，命名为 <strong>zoo.cfg</strong></li></ol></div><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将**zoo.cfg**中的 dataDir属性值 修改为 "安装路径" + "/data"</span></span><br><span class="line"><span class="attr">dataDir</span>=<span class="string">D://zookeeper//apache-zookeeper-3.6.2-bin//data</span></span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/04.png" alt="修改配置文件"></p><div class="note idea"><ol start="2"><li>启动 ./bin目录下 <strong>zkServer.cmd</strong> <strong>zkCli.cmd</strong> 命令</li></ol></div><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/05.png" alt="启动zookeeper"></p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> create 结点 值 (创建结点和值，默认创建永久结点)</span></span><br><span class="line">create /service-user 8001</span><br><span class="line"><span class="meta">#</span><span class="bash"> ls 结点 (查看结点下其他结点)</span></span><br><span class="line">ls /service-user</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> 结点 (更改结点信息)</span></span><br><span class="line">set /service-user &#123;"port":80,"url":"http://yuxiangai.cn"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> get 结点 (得到对应结点的值)</span></span><br><span class="line">get /servie-user</span><br><span class="line"><span class="meta">#</span><span class="bash"> delete 结点 (删除结点和对应值)</span></span><br><span class="line">delete /servie-user</span><br></pre></td></tr></table></figure><div class="note blue"><p>zookeeper的结点默认是永久的，即当你断开连接后，你所创建的结点依然存在，我们可以在创建时 加入参数 <strong>-e</strong> 来指定为临时结点，当断开连接时，创建的结点会被清除</p></div><div class="note blue"><p>zookeeper的结点默认是唯一的，即相同名称的结点只有一个，我们可以加 <strong>-s</strong> 来给结点增加顺序，看下图</p></div><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/06.png" alt="-s 参数演示"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><div class="note blue"><p>创建Maven项目 ，在Pom.xml文件中添加依赖</p></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.101tec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note idea"><ol><li>定义接口</li></ol></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.adl.lock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ZKLock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加锁</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放锁</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><ol start="2"><li>定义抽象类</li></ol></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.adl.lock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ZKAbstractTemplateLock</span> <span class="keyword">implements</span> <span class="title">ZKLock</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> String ZK_SERVER = <span class="string">"localhost:2181"</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ZK_TIMEOUT = <span class="number">45</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">protected</span> ZkClient client = <span class="keyword">new</span> ZkClient(ZK_SERVER, ZK_TIMEOUT);</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> String PATH = <span class="string">"/service-order"</span>;</span><br><span class="line">    <span class="keyword">protected</span> CountDownLatch countDownLatch = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (tryZKLock()) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">"\t 占有锁成功"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            waitZkLock();</span><br><span class="line">            lock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (client != <span class="keyword">null</span>) &#123;</span><br><span class="line">            client.close();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">"\t 释放锁成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 尝试加锁</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">boolean</span> <span class="title">tryZKLock</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 加锁失败则等待</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">waitZkLock</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><ol start="3"><li>定义实现类</li></ol></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.adl.lock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.IZkDataListener;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZKDistributedLock</span> <span class="keyword">extends</span> <span class="title">ZKAbstractTemplateLock</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryZKLock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client.createEphemeral(PATH);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">waitZkLock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        IZkDataListener iZkDataListener = <span class="keyword">new</span> IZkDataListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataChange</span><span class="params">(String s, Object o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataDeleted</span><span class="params">(String s)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (countDownLatch != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    countDownLatch.countDown();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        client.subscribeDataChanges(PATH, iZkDataListener);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (client.exists(PATH)) &#123;</span><br><span class="line">            <span class="comment">// 如果存在该节点，只能等着</span></span><br><span class="line">             countDownLatch = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                countDownLatch.await();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        client.unsubscribeDataChanges(PATH, iZkDataListener);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><ol start="4"><li>生成订单工具类</li></ol></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.adl.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderNumCreateUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> number = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOrderNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"\t 生成订单号： "</span> + (++number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><ol start="5"><li>订单生成服务</li></ol></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.adl.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yuxiang.adl.lock.ZKDistributedLock;</span><br><span class="line"><span class="keyword">import</span> com.yuxiang.adl.lock.ZKLock;</span><br><span class="line"><span class="keyword">import</span> com.yuxiang.adl.util.OrderNumCreateUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OrderNumCreateUtil orderNumCreateUtil = <span class="keyword">new</span> OrderNumCreateUtil();</span><br><span class="line">    <span class="keyword">private</span> ZKLock zkLock = <span class="keyword">new</span> ZKDistributedLock();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getOrderNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        zkLock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(orderNumCreateUtil.getOrderNumber());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            zkLock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><ol start="6"><li>Main方法</li></ol></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.adl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yuxiang.adl.service.OrderService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZookeeperMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">new</span> OrderService().getOrderNumber();</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note red"><ol start="7"><li>类关系图</li></ol></div><p><img src="/2020/09/29/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/07.png" alt="关系"></p>]]></content>
      
      
      <categories>
          
          <category> zookeeper </category>
          
          <category> zookeeper分布式锁 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle的下载安装与配置</title>
      <link href="2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>Maven的下载安装、配置及简单使用</p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://gradle.org" target="_blank" rel="noopener">Gradle</a>是是一个基于Apache Ant和Apache Maven概念的项目自动化构建开源工具。它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，目前也增加了基于Kotlin语言的kotlin-based DSL，抛弃了基于XML的各种繁琐配置。</p><p>面向Java应用为主。当前其支持的语言限于Java、Groovy、Kotlin和Scala，计划未来将支持更多的语言。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><div class="note blue"><p><strong>下载页面</strong> : <a href="https://services.gradle.org/distributions" target="_blank" rel="noopener">https://services.gradle.org/distributions</a> 下载gradle-x.x-bin.zip(发行版)</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/001.png" alt="下载界面"></p><p>可以自选版本，我这里选择之前的版本 <strong>gradle-5.4-bin.zip</strong> ，解压缩，放到指定目录。</p><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/002.png" alt="gradle目录"></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><div class="note blue"><p>在 此电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 系统变量 -&gt; 新建</p></div><div class="note "><p>变量值为Gradle的文件安装位置</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/003.png" alt="编辑系统变量"></p><div class="note blue"><p>修改path变量，将Gradle的bin 【%GRADLE_HOME%\bin】添加到变量之中</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/004.png" alt="配置path变量"></p><div class="note blue"><p>在命令窗口中输出 【gradle -v】查看是否安装成功</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/005.png" alt="验证"></p><h2 id="配置本地仓库和镜像加速"><a href="#配置本地仓库和镜像加速" class="headerlink" title="配置本地仓库和镜像加速"></a>配置本地仓库和镜像加速</h2><div class="note blue"><p>Gradle第一次下载文件需要到远程仓库下载，这样很慢，我们可以在本地配置一个仓库，这样第二次直接在本地加载，速度飕飕的。</p></div><div class="note "><p>还是在 此电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 系统变量 -&gt; 新建</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/006.png" alt="配置本地仓库"></p><div class="note blue"><p>在Gradle安装目录下的init.d文件中新建文件 <strong>init.gradle</strong> 输入以下内容：</p></div><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven &#123; url <span class="string">'file:///D:/gradlerepository'</span>&#125;</span><br><span class="line">        maven &#123; name <span class="string">"Alibaba"</span> ; url <span class="string">"https://maven.aliyun.com/repository/public"</span> &#125;</span><br><span class="line">mavenLocal()</span><br><span class="line">        maven &#123; name <span class="string">"Bstek"</span> ; url <span class="string">"http://nexus.bsdn.org/content/groups/public/"</span> &#125;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">buildscript</span> &#123; </span><br><span class="line">        <span class="keyword">repositories</span> &#123; </span><br><span class="line">            maven &#123; name <span class="string">"Alibaba"</span> ; url <span class="string">'https://maven.aliyun.com/repository/public'</span> &#125;</span><br><span class="line">            maven &#123; name <span class="string">"Bstek"</span> ; url <span class="string">'http://nexus.bsdn.org/content/groups/public/'</span> &#125;</span><br><span class="line">            maven &#123; name <span class="string">"M2"</span> ; url <span class="string">'https://plugins.gradle.org/m2/'</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IntelliJ-IDEA配置Gradle"><a href="#IntelliJ-IDEA配置Gradle" class="headerlink" title="IntelliJ IDEA配置Gradle"></a>IntelliJ IDEA配置Gradle</h2><div class="note blue"><p>选择 file -&gt; setting 搜索 gradle</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/007.png" alt="idea 配置 gradle"></p><div class="note blue"><p>测试 创建Gradle项目</p></div><ol><li>file -&gt; new -&gt; Project ,选择Gradle</li></ol><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/008.png" alt></p><ol start="2"><li>填写项目名和 groupid、artifactid, version, 点击 Finish</li></ol><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/009.png" alt></p><ol start="3"><li>添加 <strong>build.gradle</strong>文件中添加Spring 依赖，测试运行Spring项目</li></ol><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">group</span> <span class="string">'com.yuxiang'</span></span><br><span class="line">version <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">sourceCompatibility</span> = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    testCompile <span class="keyword">group</span>: <span class="string">'junit'</span>, name: <span class="string">'junit'</span>, version: <span class="string">'4.12'</span></span><br><span class="line">    <span class="comment">// https://mvnrepository.com/artifact/org.springframework/spring-context</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">group</span>: <span class="string">'org.springframework'</span>, name: <span class="string">'spring-context'</span>, version: <span class="string">'5.2.5.RELEASE'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><p>主类</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yuxiang.service.BaseService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        AnnotationConfigApplicationContext context</span><br><span class="line">                = <span class="keyword">new</span> AnnotationConfigApplicationContext(ServiceConfig<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        BaseService baseService = (BaseService) context.getBean(<span class="string">"baseService"</span>);</span><br><span class="line"></span><br><span class="line">        Integer integer = baseService.show(<span class="number">10</span>);</span><br><span class="line">        System.out.println(integer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.yuxiang"</span>)</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServiceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><p>接口</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">show</span><span class="params">(Integer value)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note idea"><p>实现类</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuxiang.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yuxiang.service.BaseService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"baseService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServiceImpl</span> <span class="keyword">implements</span> <span class="title">BaseService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">show</span><span class="params">(Integer value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value * value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note red"><p>运行结果</p></div><p><img src="/2020/09/22/Gradle%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/010.png" alt="运行结果"></p>]]></content>
      
      
      <categories>
          
          <category> 项目构建 </category>
          
          <category> Gradle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go语言之框架Gin的简单使用</title>
      <link href="2020/07/10/go%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%A1%86%E6%9E%B6Gin%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>2020/07/10/go%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%A1%86%E6%9E%B6Gin%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>go语言之框架Gin的简单使用</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven的下载安装与配置</title>
      <link href="2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>Maven的下载安装、配置及简单使用</p><a id="more"></a><h2 id="Maven简介"><a href="#Maven简介" class="headerlink" title="Maven简介"></a>Maven简介</h2><p><a href="http://maven.apache.org/" target="_blank" rel="noopener">Apache Maven</a>是一个软件项目管理和理解工具。基于项目对象模型（POM）的概念，Maven可以从中央信息管理项目的构建，报告和文档。</p><h2 id="Maven下载"><a href="#Maven下载" class="headerlink" title="Maven下载"></a>Maven下载</h2><p>点击 Download进行下载</p><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710071945001.png" alt="image-20200710071945001"></p><p>选择二进制下载，版本为3.6.3</p><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710072517903.png" alt="image-20200710072517903"></p><h2 id="Maven安装"><a href="#Maven安装" class="headerlink" title="Maven安装"></a>Maven安装</h2><ol><li>解压缩之后目录</li></ol><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710072759020.png" alt="image-20200710072759020"></p><ol start="2"><li>配置系统环境变量</li></ol><div class="note blue"><p>此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量-&gt;新建</p></div><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710075033703.png" alt="image-20200710075033703"></p><p>在path 环境变量后添加 %MAVEN_HOME%/bin</p><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710075157968.png" alt="image-20200710075157968"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看Maven是否安装成功，使用命令</span></span><br><span class="line">mvn <span class="literal">-version</span></span><br></pre></td></tr></table></figure><h2 id="配置本地仓库"><a href="#配置本地仓库" class="headerlink" title="配置本地仓库"></a>配置本地仓库</h2><p>首先，我们要知道什么是仓库，详情可参考<a href="https://www.runoob.com/maven/maven-repositories.html" target="_blank" rel="noopener">菜鸟教程</a></p><p>简单来说，就是“我”安装了一个软件叫Maven，当”我“输入一个jar包的名字，让Maven这个软件去帮我下载，从而不用自己再去Maven仓库手动下载。</p><p>但是，Maven默认是去中央仓库下载jar包，而中央仓库又是在国外，访问会很慢，所以配置一个本地仓库，将远程仓库的jar包下载并保存到本地，这样当下次再使用时就不用到国外去下载了，速度飕飕的。</p><hr><p>在Maven根目录中打开conf/settings.xml，配置 localRepository，写自己<strong>创建的</strong>文件路径即可</p><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710081404327.png" alt="image-20200710081404327"></p><h2 id="配置阿里云镜像加速"><a href="#配置阿里云镜像加速" class="headerlink" title="配置阿里云镜像加速"></a>配置阿里云镜像加速</h2><p>即使配置了本地仓库，第一次去国外下载依旧很慢，我们可以配置为阿里云仓库</p><p>打开Maven根目录中的conf/settings.xml文件，在 mirrors 节点上，添加内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710082403929.png" alt="image-20200710082403929"></p><h2 id="IntelliJ-IDEA配置Maven"><a href="#IntelliJ-IDEA配置Maven" class="headerlink" title="IntelliJ IDEA配置Maven"></a>IntelliJ IDEA配置Maven</h2><div class="note "><p>打开IntelliJ IDEA，选择 file&gt;settings&gt;Build</p></div><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710090945844.png" alt="image-20200710090945844"></p><h3 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h3><div class="note "><p>新建Maven项目 file&gt;New&gt;Project</p></div><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710092901042.png" alt="image-20200710092901042"></p><div class="note idea"><p>设置 GroupId、Artifactld、Version <br> ​ GroupId: 组织名，公司网址的反写 + 项目名称 <br> ​ ArtifactId: 项目名-模块名 <br> ​ Version: 项目版本 <br></p></div><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710093225989.png" alt="image-20200710093225989"></p><p>选择安装位置，点击Finish完成构建</p><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710095258259.png" alt="image-20200710095258259"></p><h3 id="Maven目录结构"><a href="#Maven目录结构" class="headerlink" title="Maven目录结构"></a>Maven目录结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">  -main</span><br><span class="line">      -java java源代码文件</span><br><span class="line">      -resources 资源库，会自动复制到classes目录里   </span><br><span class="line">      -webapp web应用的目录。WEB-INF、css、js等 </span><br><span class="line">  - test</span><br><span class="line">      -java 单元测试java源代码文件</span><br><span class="line">      -resources 测试需要用的资源库</span><br><span class="line">target</span><br><span class="line">  - classes 项目主体输出目录</span><br><span class="line">  - test-classes 项目测试输出目录</span><br><span class="line">pom.xml  maven的pom文件,再此处添加jar依赖</span><br><span class="line">LICENSE.txt Project’s license</span><br><span class="line">README.txt Project’s readme</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在pom.xml中添加Spring依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note "><p>在/src/main/java下创建Person类</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter、setter 省略</span></span><br></pre></td></tr></table></figure><div class="note "><p>在/src/main/resourse下创建 applicationContext.xml</p></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dateFormat"</span> <span class="attr">class</span>=<span class="string">"java.text.SimpleDateFormat"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">"yyyy-MM-dd "</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"yuxiang"</span> <span class="attr">class</span>=<span class="string">"com.yuxiang.Person"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"雨巷"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"20"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建程序入口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationMain</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ClassPathXmlApplicationContext context</span><br><span class="line">                = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        Person yuxiang = (Person) context.getBean(<span class="string">"yuxiang"</span>);</span><br><span class="line">        System.out.println(yuxiang);</span><br><span class="line">        <span class="comment">// 运行结果的 Person&#123;name='雨巷', age=20&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目结构图</p><p><img src="/2020/07/09/Maven%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200710102850593.png" alt="image-20200710102850593"></p><h2 id="eclipse配置Maven"><a href="#eclipse配置Maven" class="headerlink" title="eclipse配置Maven"></a>eclipse配置Maven</h2>]]></content>
      
      
      <categories>
          
          <category> 项目构建 </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/07/03/hello-world/"/>
      <url>2020/07/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
